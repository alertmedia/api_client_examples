/* 
 * AlertMedia API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.1.1
 * Contact: support@alertmedia.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = AlertMedia.CodeGen.Client.SwaggerDateConverter;

namespace AlertMedia.CodeGen.Model
{
    /// <summary>
    /// User
    /// </summary>
    [DataContract]
    public partial class User :  IEquatable<User>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="User" /> class.
        /// </summary>
        /// <param name="Id">Id.</param>
        /// <param name="Deleted">Deleted.</param>
        /// <param name="DeletedDate">DeletedDate.</param>
        /// <param name="PhotoUrl">PhotoUrl.</param>
        /// <param name="MobilePhone2">MobilePhone2.</param>
        /// <param name="MobilePhone3">MobilePhone3.</param>
        /// <param name="HomePhone">HomePhone.</param>
        /// <param name="OfficePhone">OfficePhone.</param>
        /// <param name="CustomerUserId">CustomerUserId.</param>
        /// <param name="MobilePhonePostDial">MobilePhonePostDial.</param>
        /// <param name="MobilePhone2PostDial">MobilePhone2PostDial.</param>
        /// <param name="MobilePhone3PostDial">MobilePhone3PostDial.</param>
        /// <param name="HomePhonePostDial">HomePhonePostDial.</param>
        /// <param name="OfficePhonePostDial">OfficePhonePostDial.</param>
        /// <param name="LastLogin">LastLogin.</param>
        /// <param name="FirstName">FirstName.</param>
        /// <param name="LastName">LastName.</param>
        /// <param name="Email">Email.</param>
        /// <param name="IsActive">IsActive.</param>
        /// <param name="DateJoined">DateJoined.</param>
        /// <param name="Title">Title.</param>
        /// <param name="Email2">Email2.</param>
        /// <param name="Email3">Email3.</param>
        /// <param name="MobilePhone">MobilePhone.</param>
        /// <param name="Address">Address.</param>
        /// <param name="Address2">Address2.</param>
        /// <param name="City">City.</param>
        /// <param name="State">State.</param>
        /// <param name="Country">Country.</param>
        /// <param name="Zipcode">Zipcode.</param>
        /// <param name="Notes">Notes.</param>
        /// <param name="OutboundNumber">OutboundNumber.</param>
        /// <param name="DateActivated">DateActivated.</param>
        /// <param name="TimeZone">TimeZone.</param>
        /// <param name="SsoUserId">SsoUserId.</param>
        /// <param name="Photo">Photo.</param>
        /// <param name="EmergencyContacts">EmergencyContacts.</param>
        /// <param name="AdditionalData">AdditionalData.</param>
        public User(long? Id = default(long?), string Deleted = default(string), DateTime? DeletedDate = default(DateTime?), string PhotoUrl = default(string), string MobilePhone2 = default(string), string MobilePhone3 = default(string), string HomePhone = default(string), string OfficePhone = default(string), string CustomerUserId = default(string), string MobilePhonePostDial = default(string), string MobilePhone2PostDial = default(string), string MobilePhone3PostDial = default(string), string HomePhonePostDial = default(string), string OfficePhonePostDial = default(string), DateTime? LastLogin = default(DateTime?), string FirstName = default(string), string LastName = default(string), string Email = default(string), string IsActive = default(string), DateTime? DateJoined = default(DateTime?), string Title = default(string), string Email2 = default(string), string Email3 = default(string), string MobilePhone = default(string), string Address = default(string), string Address2 = default(string), string City = default(string), string State = default(string), string Country = default(string), string Zipcode = default(string), string Notes = default(string), string OutboundNumber = default(string), DateTime? DateActivated = default(DateTime?), string TimeZone = default(string), string SsoUserId = default(string), string Photo = default(string), Collection<long?> EmergencyContacts = default(Collection<long?>), Dictionary<string, string> AdditionalData = default(Dictionary<string, string>))
        {
            this.Id = Id;
            this.Deleted = Deleted;
            this.DeletedDate = DeletedDate;
            this.PhotoUrl = PhotoUrl;
            this.MobilePhone2 = MobilePhone2;
            this.MobilePhone3 = MobilePhone3;
            this.HomePhone = HomePhone;
            this.OfficePhone = OfficePhone;
            this.CustomerUserId = CustomerUserId;
            this.MobilePhonePostDial = MobilePhonePostDial;
            this.MobilePhone2PostDial = MobilePhone2PostDial;
            this.MobilePhone3PostDial = MobilePhone3PostDial;
            this.HomePhonePostDial = HomePhonePostDial;
            this.OfficePhonePostDial = OfficePhonePostDial;
            this.LastLogin = LastLogin;
            this.FirstName = FirstName;
            this.LastName = LastName;
            this.Email = Email;
            this.IsActive = IsActive;
            this.DateJoined = DateJoined;
            this.Title = Title;
            this.Email2 = Email2;
            this.Email3 = Email3;
            this.MobilePhone = MobilePhone;
            this.Address = Address;
            this.Address2 = Address2;
            this.City = City;
            this.State = State;
            this.Country = Country;
            this.Zipcode = Zipcode;
            this.Notes = Notes;
            this.OutboundNumber = OutboundNumber;
            this.DateActivated = DateActivated;
            this.TimeZone = TimeZone;
            this.SsoUserId = SsoUserId;
            this.Photo = Photo;
            this.EmergencyContacts = EmergencyContacts;
            this.AdditionalData = AdditionalData;
        }
        
        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public long? Id { get; set; }

        /// <summary>
        /// Gets or Sets Deleted
        /// </summary>
        [DataMember(Name="deleted", EmitDefaultValue=false)]
        public string Deleted { get; set; }

        /// <summary>
        /// Gets or Sets DeletedDate
        /// </summary>
        [DataMember(Name="deleted_date", EmitDefaultValue=false)]
        public DateTime? DeletedDate { get; set; }

        /// <summary>
        /// Gets or Sets PhotoUrl
        /// </summary>
        [DataMember(Name="photo_url", EmitDefaultValue=false)]
        public string PhotoUrl { get; set; }

        /// <summary>
        /// Gets or Sets MobilePhone2
        /// </summary>
        [DataMember(Name="mobile_phone2", EmitDefaultValue=false)]
        public string MobilePhone2 { get; set; }

        /// <summary>
        /// Gets or Sets MobilePhone3
        /// </summary>
        [DataMember(Name="mobile_phone3", EmitDefaultValue=false)]
        public string MobilePhone3 { get; set; }

        /// <summary>
        /// Gets or Sets HomePhone
        /// </summary>
        [DataMember(Name="home_phone", EmitDefaultValue=false)]
        public string HomePhone { get; set; }

        /// <summary>
        /// Gets or Sets OfficePhone
        /// </summary>
        [DataMember(Name="office_phone", EmitDefaultValue=false)]
        public string OfficePhone { get; set; }

        /// <summary>
        /// Gets or Sets CustomerUserId
        /// </summary>
        [DataMember(Name="customer_user_id", EmitDefaultValue=false)]
        public string CustomerUserId { get; set; }

        /// <summary>
        /// Gets or Sets MobilePhonePostDial
        /// </summary>
        [DataMember(Name="mobile_phone_post_dial", EmitDefaultValue=false)]
        public string MobilePhonePostDial { get; set; }

        /// <summary>
        /// Gets or Sets MobilePhone2PostDial
        /// </summary>
        [DataMember(Name="mobile_phone2_post_dial", EmitDefaultValue=false)]
        public string MobilePhone2PostDial { get; set; }

        /// <summary>
        /// Gets or Sets MobilePhone3PostDial
        /// </summary>
        [DataMember(Name="mobile_phone3_post_dial", EmitDefaultValue=false)]
        public string MobilePhone3PostDial { get; set; }

        /// <summary>
        /// Gets or Sets HomePhonePostDial
        /// </summary>
        [DataMember(Name="home_phone_post_dial", EmitDefaultValue=false)]
        public string HomePhonePostDial { get; set; }

        /// <summary>
        /// Gets or Sets OfficePhonePostDial
        /// </summary>
        [DataMember(Name="office_phone_post_dial", EmitDefaultValue=false)]
        public string OfficePhonePostDial { get; set; }

        /// <summary>
        /// Gets or Sets LastLogin
        /// </summary>
        [DataMember(Name="last_login", EmitDefaultValue=false)]
        public DateTime? LastLogin { get; set; }

        /// <summary>
        /// Gets or Sets FirstName
        /// </summary>
        [DataMember(Name="first_name", EmitDefaultValue=false)]
        public string FirstName { get; set; }

        /// <summary>
        /// Gets or Sets LastName
        /// </summary>
        [DataMember(Name="last_name", EmitDefaultValue=false)]
        public string LastName { get; set; }

        /// <summary>
        /// Gets or Sets Email
        /// </summary>
        [DataMember(Name="email", EmitDefaultValue=false)]
        public string Email { get; set; }

        /// <summary>
        /// Gets or Sets IsActive
        /// </summary>
        [DataMember(Name="is_active", EmitDefaultValue=false)]
        public string IsActive { get; set; }

        /// <summary>
        /// Gets or Sets DateJoined
        /// </summary>
        [DataMember(Name="date_joined", EmitDefaultValue=false)]
        public DateTime? DateJoined { get; set; }

        /// <summary>
        /// Gets or Sets Title
        /// </summary>
        [DataMember(Name="title", EmitDefaultValue=false)]
        public string Title { get; set; }

        /// <summary>
        /// Gets or Sets Email2
        /// </summary>
        [DataMember(Name="email2", EmitDefaultValue=false)]
        public string Email2 { get; set; }

        /// <summary>
        /// Gets or Sets Email3
        /// </summary>
        [DataMember(Name="email3", EmitDefaultValue=false)]
        public string Email3 { get; set; }

        /// <summary>
        /// Gets or Sets MobilePhone
        /// </summary>
        [DataMember(Name="mobile_phone", EmitDefaultValue=false)]
        public string MobilePhone { get; set; }

        /// <summary>
        /// Gets or Sets Address
        /// </summary>
        [DataMember(Name="address", EmitDefaultValue=false)]
        public string Address { get; set; }

        /// <summary>
        /// Gets or Sets Address2
        /// </summary>
        [DataMember(Name="address2", EmitDefaultValue=false)]
        public string Address2 { get; set; }

        /// <summary>
        /// Gets or Sets City
        /// </summary>
        [DataMember(Name="city", EmitDefaultValue=false)]
        public string City { get; set; }

        /// <summary>
        /// Gets or Sets State
        /// </summary>
        [DataMember(Name="state", EmitDefaultValue=false)]
        public string State { get; set; }

        /// <summary>
        /// Gets or Sets Country
        /// </summary>
        [DataMember(Name="country", EmitDefaultValue=false)]
        public string Country { get; set; }

        /// <summary>
        /// Gets or Sets Zipcode
        /// </summary>
        [DataMember(Name="zipcode", EmitDefaultValue=false)]
        public string Zipcode { get; set; }

        /// <summary>
        /// Gets or Sets Notes
        /// </summary>
        [DataMember(Name="notes", EmitDefaultValue=false)]
        public string Notes { get; set; }

        /// <summary>
        /// Gets or Sets OutboundNumber
        /// </summary>
        [DataMember(Name="outbound_number", EmitDefaultValue=false)]
        public string OutboundNumber { get; set; }

        /// <summary>
        /// Gets or Sets DateActivated
        /// </summary>
        [DataMember(Name="date_activated", EmitDefaultValue=false)]
        public DateTime? DateActivated { get; set; }

        /// <summary>
        /// Gets or Sets TimeZone
        /// </summary>
        [DataMember(Name="time_zone", EmitDefaultValue=false)]
        public string TimeZone { get; set; }

        /// <summary>
        /// Gets or Sets SsoUserId
        /// </summary>
        [DataMember(Name="sso_user_id", EmitDefaultValue=false)]
        public string SsoUserId { get; set; }

        /// <summary>
        /// Gets or Sets Photo
        /// </summary>
        [DataMember(Name="photo", EmitDefaultValue=false)]
        public string Photo { get; set; }

        /// <summary>
        /// Gets or Sets EmergencyContacts
        /// </summary>
        [DataMember(Name="emergency_contacts", EmitDefaultValue=false)]
        public Collection<long?> EmergencyContacts { get; set; }

        /// <summary>
        /// Gets or Sets AdditionalData
        /// </summary>
        [DataMember(Name="additional_data", EmitDefaultValue=false)]
        public Dictionary<string, string> AdditionalData { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class User {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Deleted: ").Append(Deleted).Append("\n");
            sb.Append("  DeletedDate: ").Append(DeletedDate).Append("\n");
            sb.Append("  PhotoUrl: ").Append(PhotoUrl).Append("\n");
            sb.Append("  MobilePhone2: ").Append(MobilePhone2).Append("\n");
            sb.Append("  MobilePhone3: ").Append(MobilePhone3).Append("\n");
            sb.Append("  HomePhone: ").Append(HomePhone).Append("\n");
            sb.Append("  OfficePhone: ").Append(OfficePhone).Append("\n");
            sb.Append("  CustomerUserId: ").Append(CustomerUserId).Append("\n");
            sb.Append("  MobilePhonePostDial: ").Append(MobilePhonePostDial).Append("\n");
            sb.Append("  MobilePhone2PostDial: ").Append(MobilePhone2PostDial).Append("\n");
            sb.Append("  MobilePhone3PostDial: ").Append(MobilePhone3PostDial).Append("\n");
            sb.Append("  HomePhonePostDial: ").Append(HomePhonePostDial).Append("\n");
            sb.Append("  OfficePhonePostDial: ").Append(OfficePhonePostDial).Append("\n");
            sb.Append("  LastLogin: ").Append(LastLogin).Append("\n");
            sb.Append("  FirstName: ").Append(FirstName).Append("\n");
            sb.Append("  LastName: ").Append(LastName).Append("\n");
            sb.Append("  Email: ").Append(Email).Append("\n");
            sb.Append("  IsActive: ").Append(IsActive).Append("\n");
            sb.Append("  DateJoined: ").Append(DateJoined).Append("\n");
            sb.Append("  Title: ").Append(Title).Append("\n");
            sb.Append("  Email2: ").Append(Email2).Append("\n");
            sb.Append("  Email3: ").Append(Email3).Append("\n");
            sb.Append("  MobilePhone: ").Append(MobilePhone).Append("\n");
            sb.Append("  Address: ").Append(Address).Append("\n");
            sb.Append("  Address2: ").Append(Address2).Append("\n");
            sb.Append("  City: ").Append(City).Append("\n");
            sb.Append("  State: ").Append(State).Append("\n");
            sb.Append("  Country: ").Append(Country).Append("\n");
            sb.Append("  Zipcode: ").Append(Zipcode).Append("\n");
            sb.Append("  Notes: ").Append(Notes).Append("\n");
            sb.Append("  OutboundNumber: ").Append(OutboundNumber).Append("\n");
            sb.Append("  DateActivated: ").Append(DateActivated).Append("\n");
            sb.Append("  TimeZone: ").Append(TimeZone).Append("\n");
            sb.Append("  SsoUserId: ").Append(SsoUserId).Append("\n");
            sb.Append("  Photo: ").Append(Photo).Append("\n");
            sb.Append("  EmergencyContacts: ").Append(EmergencyContacts).Append("\n");
            sb.Append("  AdditionalData: ").Append(AdditionalData).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            return this.Equals(obj as User);
        }

        /// <summary>
        /// Returns true if User instances are equal
        /// </summary>
        /// <param name="other">Instance of User to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(User other)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            if (other == null)
                return false;

            return 
                (
                    this.Id == other.Id ||
                    this.Id != null &&
                    this.Id.Equals(other.Id)
                ) && 
                (
                    this.Deleted == other.Deleted ||
                    this.Deleted != null &&
                    this.Deleted.Equals(other.Deleted)
                ) && 
                (
                    this.DeletedDate == other.DeletedDate ||
                    this.DeletedDate != null &&
                    this.DeletedDate.Equals(other.DeletedDate)
                ) && 
                (
                    this.PhotoUrl == other.PhotoUrl ||
                    this.PhotoUrl != null &&
                    this.PhotoUrl.Equals(other.PhotoUrl)
                ) && 
                (
                    this.MobilePhone2 == other.MobilePhone2 ||
                    this.MobilePhone2 != null &&
                    this.MobilePhone2.Equals(other.MobilePhone2)
                ) && 
                (
                    this.MobilePhone3 == other.MobilePhone3 ||
                    this.MobilePhone3 != null &&
                    this.MobilePhone3.Equals(other.MobilePhone3)
                ) && 
                (
                    this.HomePhone == other.HomePhone ||
                    this.HomePhone != null &&
                    this.HomePhone.Equals(other.HomePhone)
                ) && 
                (
                    this.OfficePhone == other.OfficePhone ||
                    this.OfficePhone != null &&
                    this.OfficePhone.Equals(other.OfficePhone)
                ) && 
                (
                    this.CustomerUserId == other.CustomerUserId ||
                    this.CustomerUserId != null &&
                    this.CustomerUserId.Equals(other.CustomerUserId)
                ) && 
                (
                    this.MobilePhonePostDial == other.MobilePhonePostDial ||
                    this.MobilePhonePostDial != null &&
                    this.MobilePhonePostDial.Equals(other.MobilePhonePostDial)
                ) && 
                (
                    this.MobilePhone2PostDial == other.MobilePhone2PostDial ||
                    this.MobilePhone2PostDial != null &&
                    this.MobilePhone2PostDial.Equals(other.MobilePhone2PostDial)
                ) && 
                (
                    this.MobilePhone3PostDial == other.MobilePhone3PostDial ||
                    this.MobilePhone3PostDial != null &&
                    this.MobilePhone3PostDial.Equals(other.MobilePhone3PostDial)
                ) && 
                (
                    this.HomePhonePostDial == other.HomePhonePostDial ||
                    this.HomePhonePostDial != null &&
                    this.HomePhonePostDial.Equals(other.HomePhonePostDial)
                ) && 
                (
                    this.OfficePhonePostDial == other.OfficePhonePostDial ||
                    this.OfficePhonePostDial != null &&
                    this.OfficePhonePostDial.Equals(other.OfficePhonePostDial)
                ) && 
                (
                    this.LastLogin == other.LastLogin ||
                    this.LastLogin != null &&
                    this.LastLogin.Equals(other.LastLogin)
                ) && 
                (
                    this.FirstName == other.FirstName ||
                    this.FirstName != null &&
                    this.FirstName.Equals(other.FirstName)
                ) && 
                (
                    this.LastName == other.LastName ||
                    this.LastName != null &&
                    this.LastName.Equals(other.LastName)
                ) && 
                (
                    this.Email == other.Email ||
                    this.Email != null &&
                    this.Email.Equals(other.Email)
                ) && 
                (
                    this.IsActive == other.IsActive ||
                    this.IsActive != null &&
                    this.IsActive.Equals(other.IsActive)
                ) && 
                (
                    this.DateJoined == other.DateJoined ||
                    this.DateJoined != null &&
                    this.DateJoined.Equals(other.DateJoined)
                ) && 
                (
                    this.Title == other.Title ||
                    this.Title != null &&
                    this.Title.Equals(other.Title)
                ) && 
                (
                    this.Email2 == other.Email2 ||
                    this.Email2 != null &&
                    this.Email2.Equals(other.Email2)
                ) && 
                (
                    this.Email3 == other.Email3 ||
                    this.Email3 != null &&
                    this.Email3.Equals(other.Email3)
                ) && 
                (
                    this.MobilePhone == other.MobilePhone ||
                    this.MobilePhone != null &&
                    this.MobilePhone.Equals(other.MobilePhone)
                ) && 
                (
                    this.Address == other.Address ||
                    this.Address != null &&
                    this.Address.Equals(other.Address)
                ) && 
                (
                    this.Address2 == other.Address2 ||
                    this.Address2 != null &&
                    this.Address2.Equals(other.Address2)
                ) && 
                (
                    this.City == other.City ||
                    this.City != null &&
                    this.City.Equals(other.City)
                ) && 
                (
                    this.State == other.State ||
                    this.State != null &&
                    this.State.Equals(other.State)
                ) && 
                (
                    this.Country == other.Country ||
                    this.Country != null &&
                    this.Country.Equals(other.Country)
                ) && 
                (
                    this.Zipcode == other.Zipcode ||
                    this.Zipcode != null &&
                    this.Zipcode.Equals(other.Zipcode)
                ) && 
                (
                    this.Notes == other.Notes ||
                    this.Notes != null &&
                    this.Notes.Equals(other.Notes)
                ) && 
                (
                    this.OutboundNumber == other.OutboundNumber ||
                    this.OutboundNumber != null &&
                    this.OutboundNumber.Equals(other.OutboundNumber)
                ) && 
                (
                    this.DateActivated == other.DateActivated ||
                    this.DateActivated != null &&
                    this.DateActivated.Equals(other.DateActivated)
                ) && 
                (
                    this.TimeZone == other.TimeZone ||
                    this.TimeZone != null &&
                    this.TimeZone.Equals(other.TimeZone)
                ) && 
                (
                    this.SsoUserId == other.SsoUserId ||
                    this.SsoUserId != null &&
                    this.SsoUserId.Equals(other.SsoUserId)
                ) && 
                (
                    this.Photo == other.Photo ||
                    this.Photo != null &&
                    this.Photo.Equals(other.Photo)
                ) && 
                (
                    this.EmergencyContacts == other.EmergencyContacts ||
                    this.EmergencyContacts != null &&
                    this.EmergencyContacts.SequenceEqual(other.EmergencyContacts)
                ) && 
                (
                    this.AdditionalData == other.AdditionalData ||
                    this.AdditionalData != null &&
                    this.AdditionalData.SequenceEqual(other.AdditionalData)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            // credit: http://stackoverflow.com/a/263416/677735
            unchecked // Overflow is fine, just wrap
            {
                int hash = 41;
                // Suitable nullity checks etc, of course :)
                if (this.Id != null)
                    hash = hash * 59 + this.Id.GetHashCode();
                if (this.Deleted != null)
                    hash = hash * 59 + this.Deleted.GetHashCode();
                if (this.DeletedDate != null)
                    hash = hash * 59 + this.DeletedDate.GetHashCode();
                if (this.PhotoUrl != null)
                    hash = hash * 59 + this.PhotoUrl.GetHashCode();
                if (this.MobilePhone2 != null)
                    hash = hash * 59 + this.MobilePhone2.GetHashCode();
                if (this.MobilePhone3 != null)
                    hash = hash * 59 + this.MobilePhone3.GetHashCode();
                if (this.HomePhone != null)
                    hash = hash * 59 + this.HomePhone.GetHashCode();
                if (this.OfficePhone != null)
                    hash = hash * 59 + this.OfficePhone.GetHashCode();
                if (this.CustomerUserId != null)
                    hash = hash * 59 + this.CustomerUserId.GetHashCode();
                if (this.MobilePhonePostDial != null)
                    hash = hash * 59 + this.MobilePhonePostDial.GetHashCode();
                if (this.MobilePhone2PostDial != null)
                    hash = hash * 59 + this.MobilePhone2PostDial.GetHashCode();
                if (this.MobilePhone3PostDial != null)
                    hash = hash * 59 + this.MobilePhone3PostDial.GetHashCode();
                if (this.HomePhonePostDial != null)
                    hash = hash * 59 + this.HomePhonePostDial.GetHashCode();
                if (this.OfficePhonePostDial != null)
                    hash = hash * 59 + this.OfficePhonePostDial.GetHashCode();
                if (this.LastLogin != null)
                    hash = hash * 59 + this.LastLogin.GetHashCode();
                if (this.FirstName != null)
                    hash = hash * 59 + this.FirstName.GetHashCode();
                if (this.LastName != null)
                    hash = hash * 59 + this.LastName.GetHashCode();
                if (this.Email != null)
                    hash = hash * 59 + this.Email.GetHashCode();
                if (this.IsActive != null)
                    hash = hash * 59 + this.IsActive.GetHashCode();
                if (this.DateJoined != null)
                    hash = hash * 59 + this.DateJoined.GetHashCode();
                if (this.Title != null)
                    hash = hash * 59 + this.Title.GetHashCode();
                if (this.Email2 != null)
                    hash = hash * 59 + this.Email2.GetHashCode();
                if (this.Email3 != null)
                    hash = hash * 59 + this.Email3.GetHashCode();
                if (this.MobilePhone != null)
                    hash = hash * 59 + this.MobilePhone.GetHashCode();
                if (this.Address != null)
                    hash = hash * 59 + this.Address.GetHashCode();
                if (this.Address2 != null)
                    hash = hash * 59 + this.Address2.GetHashCode();
                if (this.City != null)
                    hash = hash * 59 + this.City.GetHashCode();
                if (this.State != null)
                    hash = hash * 59 + this.State.GetHashCode();
                if (this.Country != null)
                    hash = hash * 59 + this.Country.GetHashCode();
                if (this.Zipcode != null)
                    hash = hash * 59 + this.Zipcode.GetHashCode();
                if (this.Notes != null)
                    hash = hash * 59 + this.Notes.GetHashCode();
                if (this.OutboundNumber != null)
                    hash = hash * 59 + this.OutboundNumber.GetHashCode();
                if (this.DateActivated != null)
                    hash = hash * 59 + this.DateActivated.GetHashCode();
                if (this.TimeZone != null)
                    hash = hash * 59 + this.TimeZone.GetHashCode();
                if (this.SsoUserId != null)
                    hash = hash * 59 + this.SsoUserId.GetHashCode();
                if (this.Photo != null)
                    hash = hash * 59 + this.Photo.GetHashCode();
                if (this.EmergencyContacts != null)
                    hash = hash * 59 + this.EmergencyContacts.GetHashCode();
                if (this.AdditionalData != null)
                    hash = hash * 59 + this.AdditionalData.GetHashCode();
                return hash;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
